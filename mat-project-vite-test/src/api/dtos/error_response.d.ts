/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Human readable error message
 */
export type HumanReadableErrorMessage = string;
/**
 * Serves as identifier for action which should be triggered by app.
 */
export type EndpointSpecificErrorCode = number;
/**
 * Serves as error action specific data.
 */
export type ErrorData =
  | {
      [k: string]: unknown;
    }
  | unknown[];
/**
 * Human readable details about error or help message, specifying which action should user take
 */
export type HumanReadableErrorDescription = string;
/**
 * Column of invalid element
 */
export type ElementColumn = number;
/**
 * Line of invalid element
 */
export type ElementLine = number;
/**
 * Byte index of invalid element
 */
export type ElementByteIndex = number;
/**
 * Expected valid elements at this position
 *
 * @minItems 1
 */
export type ExpectedElements = [string, ...string[]];
/**
 * Column of element with invalid attribute
 */
export type ElementColumn1 = number;
/**
 * Line of element with invalid attribute
 */
export type ElementLine1 = number;
/**
 * Byte index of element with invalid attribute
 */
export type ElementByteIndex1 = number;
/**
 * Expected valid attributes at this position
 *
 * @minItems 1
 */
export type ExpectedAttributes = [string, ...string[]];
/**
 * Column of element with invalid attribute value
 */
export type ElementColumn2 = number;
/**
 * Line of element with invalid attribute value
 */
export type ElementLine2 = number;
/**
 * Byte index of element with invalid attribute
 */
export type ElementByteIndex2 = number;
/**
 * Serves as identifier for action which should be triggered by app.
 */
export type EndpointSpecificErrorCode1 = 103;
/**
 * Column of element with missing attributes
 */
export type ElementColumn3 = number;
/**
 * Line of element with missing attributes
 */
export type ElementLine3 = number;
/**
 * Byte index of element with missing attributes
 */
export type ElementByteIndex3 = number;
/**
 * Missing required attributes
 *
 * @minItems 1
 */
export type MissingAttributes = [string, ...string[]];
/**
 * Column of invalid element value
 */
export type ValueColumn = number;
/**
 * Line of invalid element value
 */
export type ValueLine = number;
/**
 * Byte index of invalid element value
 */
export type ValueByteIndex = number;
/**
 * Serves as identifier for action which should be triggered by app.
 */
export type EndpointSpecificErrorCode2 = 105;
/**
 * Column of element with missing required children
 */
export type ElementColumn4 = number;
/**
 * Line of element with missing required children
 */
export type ElementLine4 = number;
/**
 * Byte index of element with missing required children
 */
export type ElementByteIndex4 = number;
/**
 * Missing required elements
 *
 * @minItems 1
 */
export type MissingElements = [string, ...string[]];

/**
 * Specifies format of error response.
 */
export interface ApplicationErrorResponse {
  error: ApplicationErrorObject &
    (
      | XMLInvalidElement
      | XMLInvalidAttribute
      | XMLInvalidAttributeValue
      | XMLMissingRequiredAttributes
      | XMLInvalidElementValue
      | XMLMissingRequiredElements
    );
  [k: string]: unknown;
}
/**
 * Serves as object specifying details about the error for both application and user.
 */
export interface ApplicationErrorObject {
  message?: HumanReadableErrorMessage;
  code?: EndpointSpecificErrorCode;
  errorData?: ErrorData;
  description?: HumanReadableErrorDescription;
  [k: string]: unknown;
}
export interface XMLInvalidElement {
  code?: 100;
  errorData?: {
    eColumn: ElementColumn;
    eLine: ElementLine;
    eByteIndex?: ElementByteIndex;
    expectedElements: ExpectedElements;
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
export interface XMLInvalidAttribute {
  code?: 101;
  errorData?: {
    eColumn: ElementColumn1;
    eLine: ElementLine1;
    eByteIndex?: ElementByteIndex1;
    expectedAttributes: ExpectedAttributes;
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
export interface XMLInvalidAttributeValue {
  code?: 102;
  errorData?: {
    eColumn: ElementColumn2;
    eLine: ElementLine2;
    eByteIndex?: ElementByteIndex2;
    [k: string]: unknown;
  };
  [k: string]: unknown;
}
export interface XMLMissingRequiredAttributes {
  code?: EndpointSpecificErrorCode1;
  errorData?: ErrorData1;
  [k: string]: unknown;
}
/**
 * Serves as error action specific data.
 */
export interface ErrorData1 {
  eColumn: ElementColumn3;
  eLine: ElementLine3;
  eByteIndex?: ElementByteIndex3;
  missingAttributes: MissingAttributes;
  [k: string]: unknown;
}
export interface XMLInvalidElementValue {
  code?: 104;
  errorData?: ErrorData2;
  [k: string]: unknown;
}
/**
 * Serves as error action specific data.
 */
export interface ErrorData2 {
  column: ValueColumn;
  line: ValueLine;
  byteIndex?: ValueByteIndex;
  [k: string]: unknown;
}
export interface XMLMissingRequiredElements {
  code?: EndpointSpecificErrorCode2;
  errorData?: ErrorData3;
  [k: string]: unknown;
}
/**
 * Serves as error action specific data.
 */
export interface ErrorData3 {
  eColumn?: ElementColumn4;
  eLine?: ElementLine4;
  eByteIndex?: ElementByteIndex4;
  missingElements?: MissingElements;
  [k: string]: unknown;
}
